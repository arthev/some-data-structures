(progn (setf heap (make-instance 'pairing-heap))
                (insert 3 'a heap)
                (insert 2 'b heap)
                (insert 4 'c heap)
                (princ (= 2 (key (root heap))))
                (princ (= 3 (key (right (left (root heap))))))
                (princ (= 4 (key (left (root heap)))))
                (decrease-key 2 (right (left (root heap))) heap)
                (princ (= 1 (key (root heap))))
                (princ (= 2 (key (left (root heap)))))
                (princ (= 4 (key (left (left (root heap))))))
                (update-key 0 (root heap) heap)
                (princ (zerop (key (find-extrema heap))))
                (princ (zerop (key (delete-extrema heap))))
                (princ (= 2 (key (delete-extrema heap))))
                (princ (= 4 (key (delete-extrema heap))))
                (setf heap (make-instance 'pairing-heap))
                (setf vec (make-array 1000))
                (dotimes (i 1000)
                  (setf (aref vec i) (random 800))
                  (insert (aref vec i) 'lol heap))
                (sort vec (comp-fn heap))
                (dotimes (i 1000)
                  (assert (= (aref vec i) (key (delete-extrema heap))))))


(progn (defparameter heap (make-instance 'pairing-heap))
                (defparameter nt (make-hash-table))
                (defun nti (k d)
                  (setf (gethash d nt) (insert k d heap)))
                (defun ver= (a b)
                  (assert (= a b))
                  (princ t))
                (nti 3  'a)
                (ver= 3 (key (gethash 'a nt)))
                (nti 5  'b)
                (ver= 3 (key (gethash 'a nt)))
                (ver= 5 (key (gethash 'b nt)))
                (nti 1  'c)
                (ver= 1 (key (gethash 'c nt)))
                (ver= 3 (key (gethash 'a nt)))
                (ver= 1 (key (find-extrema heap)))
                (nti 9  'd)
                (nti 11 'e)
                (ver= 9 (key (gethash 'd nt)))
                (decrease-key 2 (gethash 'd nt) heap)
                (ver= 7 (key (gethash 'd nt)))
                (decrease-key 7 (gethash 'd nt) heap)
                (ver= 0 (key (delete-extrema heap)))
                (increase-key 1 (root heap) heap)
                (ver= 2 (key (delete-extrema heap)))
                (ver= 3 (key (gethash 'a nt)))
                (increase-key 8 (gethash 'a nt) heap)
                (ver= 11 (key (gethash 'a nt)))
                (ver= 5 (key (find-extrema heap))))




